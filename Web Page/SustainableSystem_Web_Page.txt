<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sustainable System</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-image: url('Water.jpg');
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
            font-size: 1.2rem;
        }
        .container {
            background: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.1);
            width: 350px;
            text-align: center;
        }
        input, button {
            font-size: 1.2rem;
            margin: 10px 0;
            padding: 10px;
        }
        .popup {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding: 50px;
            color: white;
            border-radius: 15px;
            font-size: 1.2rem;
            display: none;
        }
        .red { background-color: red; }
        .green { background-color: green; }
        .graph-container {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.3);
            width: 800px;
            height: 500px;
        }
        .close-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            font-size: 1.5rem;
        }
        
        /* Style for making the up/down arrows always visible */
        input[type="number"]::-webkit-outer-spin-button,
        input[type="number"]::-webkit-inner-spin-button {
            -webkit-appearance: inner-spin-button;
            appearance: inner-spin-button;
            margin: 0;
        }

        input[type="number"] {
            -moz-appearance: textfield;
            appearance: textfield;
            padding-right: 25px; /* Adjust for better space for arrows */
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Insert Guest Data</h2>
        <input type="text" id="roomNumber" placeholder="Room number"><br><br>
        <input type="date" id="fromDate">
        <input type="number" id="time" placeholder="Hour" min="0" max="23">
        <button onclick="submitValues()">Submit</button>
    </div>
    
    <div id="popup" class="popup"></div>
    
    <div class="graph-container" id="graphContainer">
        <span class="close-btn" onclick="closeGraph()">X</span>
        <canvas id="graphCanvas" width="1200"></canvas>
        <div id="totalConsumption" style="text-align:right; margin-top:10px;"></div>
    </div>
    
    <script>
        const WLD = 20;
        let chartInstance = null;

        function isInteger(value) {
            return /^\d+$/.test(value);
        }

        function showPopup(message, isSuccess, data) {
            const popup = document.getElementById("popup");
            popup.innerText = message;
            popup.className = `popup ${isSuccess ? 'green' : 'red'}`;
            popup.style.display = "block";
            setTimeout(() => { 
                popup.style.display = "none"; 
                displayGraph(data);
            }, 5000);
        }

        function submitValues() {
            let roomNumber = document.getElementById("roomNumber").value;
            let fromDate = document.getElementById("fromDate").value;
            let time = document.getElementById("time").value;
            let currentDate = new Date().toISOString().split("T")[0];
            let validationError = "";

           switch (true) {
                case (!roomNumber || !fromDate || time === ""):
                    validationError = "Insert A Full Data!";
                    break;
                case (!isInteger(roomNumber) || parseInt(roomNumber) <= 0):
                    validationError = "Insert A Valid Room Number!";
                    break;
                case (fromDate > currentDate):
                    validationError = "Insert A Valid Date!";
                    break;
                case (!isInteger(time) || parseInt(time) < 0 || parseInt(time) > 23):
                    validationError = "Insert A Valid Time!";
                    break;
            }

            if (validationError) {
                alert(validationError);
                return;
            }

            fetch("http://localhost:2000/", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ roomNum: parseInt(roomNumber), date: fromDate, time: `${time}:00` })
            })
            .then(response => response.json())
            .then(data => {
                if (!data.result || data.result.length === 0) {
                    alert("No records found!");
                    return;
                }

                let totalWaterValue = data.result.reduce((sum, record) => sum + record.waterValue, 0);
                let threshold = WLD * data.result.length;
                const message = totalWaterValue > threshold ? "Unfortunately, There Is No Discount For You!" : "Congratulations, You've Got A Discount!";
                const isSuccess = totalWaterValue <= threshold;

                showPopup(message, isSuccess, data.result);
            })
            .catch(error => {
                console.error("Error fetching data:", error);
                alert("Oops!, Something Went Wrong Retrieving Your Data!");
            });
        }

        function displayGraph(data) {
            document.getElementById("graphContainer").style.display = "block";
            const ctx = document.getElementById("graphCanvas").getContext("2d");
            if (chartInstance) chartInstance.destroy();

            const values = data.map(record => record.waterValue);
            const avgConsumption = values.reduce((sum, val) => sum + val, 0) / values.length;
            const totalConsumption = values.reduce((sum, val) => sum + val, 0);

            chartInstance = new Chart(ctx, {
                type: "line",
                data: {
                    labels: data.map(record => `${record.date} ${record.time.split(':')[0]}`),
                    datasets: [
                        { label: "Water Consumption", data: values, borderColor: "rgba(75, 192, 192, 1)", backgroundColor: "rgba(75, 192, 192, 0.2)", borderWidth: 2 },
                        { label: `Average Consumption: ${avgConsumption.toFixed(2)} L`, data: new Array(values.length).fill(avgConsumption), borderColor: "red", borderWidth: 2, borderDash: [5, 5] }
                    ]
                }
            });
            document.getElementById("totalConsumption").innerText = `Total Water Consumption: ${totalConsumption} L`;
        }

        function closeGraph() {
            // Hide the graph container
            document.getElementById("graphContainer").style.display = "none";
            
            // Destroy the chart instance if it exists
            if (chartInstance) {
                chartInstance.destroy();
            }

            // Clear the input fields
            document.getElementById("roomNumber").value = "";
            document.getElementById("fromDate").value = "";
            document.getElementById("time").value = "";
        }
    </script>
</body>
</html>
